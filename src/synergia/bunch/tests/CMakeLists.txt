add_definitions(-DBOOST_TEST_DYN_LINK)
include_directories(${CMAKE_CURRENT_BINARY_DIR})

add_test_executable(test_boost_void_caster test_boost_void_caster.cc)
target_link_libraries(test_boost_void_caster ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY})
add_test(NAME test_boost_void_caster COMMAND $<TARGET_FILE:test_boost_void_caster>)

add_test_executable(test_bunch test_bunch.cc)
target_link_libraries(test_bunch synergia_bunch synergia_serialization synergia_foundation synergia_parallel_utils ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY})
add_test(NAME test_bunch COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 1  $<TARGET_FILE:test_bunch>)
add_test(NAME test_bunch_py COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 1 ${SYNERGIA2_BINARY_DIR}/synergia-local -c "import nose; nose.main()" test_bunch.py)
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/test_bunch.py 
    DESTINATION ${CMAKE_CURRENT_BINARY_DIR})

add_test_executable(test_bunch_spectator test_bunch_spectator.cc)
target_link_libraries(test_bunch_spectator synergia_bunch synergia_foundation synergia_parallel_utils
    ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY})
add_test(NAME test_bunch_spectator COMMAND ${MPIEXEC} ${MPIEXEC_NUMPROC_FLAG} 1  $<TARGET_FILE:test_bunch_spectator>)

add_test_executable(test_bunch_mem_layout test_bunch_mem_layout.cc)
target_link_libraries(test_bunch_mem_layout synergia_bunch synergia_foundation synergia_parallel_utils
    ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY})
add_test(NAME test_bunch_mem_layout COMMAND ${MPIEXEC} ${MPIEXEC_NUMPROC_FLAG} 1  $<TARGET_FILE:test_bunch_mem_layout>)

add_test_executable(test_bunch_train test_bunch_train.cc)
target_link_libraries(test_bunch_train synergia_bunch synergia_foundation synergia_parallel_utils
    ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY})
add_test(NAME test_bunch_train COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 1  $<TARGET_FILE:test_bunch_train>)
add_test(test_bunch_train_py
    ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 1 ${SYNERGIA2_BINARY_DIR}/synergia-local -c "import nose; nose.main()"
    test_bunch_train.py)
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/test_bunch_train.py 
    DESTINATION ${CMAKE_CURRENT_BINARY_DIR})

add_test_executable(test_bunch_train_mpi test_bunch_train_mpi.cc)
target_link_libraries(test_bunch_train_mpi synergia_bunch synergia_foundation synergia_parallel_utils
    ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY})
add_test(NAME test_bunch_train_mpi1 COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 1  $<TARGET_FILE:test_bunch_train_mpi>)
add_test(NAME test_bunch_train_mpi2 COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 2  $<TARGET_FILE:test_bunch_train_mpi>)
add_test(NAME test_bunch_train_mpi3 COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 3  $<TARGET_FILE:test_bunch_train_mpi>)
add_test(NAME test_bunch_train_mpi4 COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 4  $<TARGET_FILE:test_bunch_train_mpi>)

#add_test_executable(test_bunch_with_diagnostics test_bunch_with_diagnostics.cc)
#target_link_libraries(test_bunch_with_diagnostics synergia_bunch
#    ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY})
#add_test(NAME test_bunch_with_diagnostics COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 1  $<TARGET_FILE:test_bunch_train>)


add_custom_command(OUTPUT
        test_diagnostics_get_corr.icc
        test_diagnostics_get_emitx.icc
        test_diagnostics_get_emitxy.icc
        test_diagnostics_get_emitxyz.icc
        test_diagnostics_get_emity.icc
        test_diagnostics_get_emitz.icc
        test_diagnostics_get_mean.icc
        test_diagnostics_get_mom2.icc
        test_diagnostics_get_random_particles.icc
        test_diagnostics_get_std.icc
    COMMAND ${MY_PYTHON_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/test_diagnostics_crosscheck.py
    DEPENDS test_diagnostics_crosscheck.py)
add_test_executable(test_diagnostics test_diagnostics.cc
    test_diagnostics_get_corr.icc
    test_diagnostics_get_emitx.icc
    test_diagnostics_get_emitxy.icc
    test_diagnostics_get_emitxyz.icc
    test_diagnostics_get_emity.icc
    test_diagnostics_get_emitz.icc
    test_diagnostics_get_mean.icc
    test_diagnostics_get_mom2.icc
    test_diagnostics_get_random_particles.icc
    test_diagnostics_get_std.icc)
target_link_libraries(test_diagnostics synergia_bunch synergia_foundation ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY})
add_test(NAME test_diagnostics COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 1 $<TARGET_FILE:test_diagnostics>)
add_test(NAME test_diagnostics_py COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 1 ${SYNERGIA2_BINARY_DIR}/synergia-local -c "import nose; nose.main()" test_diagnostics.py)
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/test_diagnostics.py 
    DESTINATION ${CMAKE_CURRENT_BINARY_DIR})

add_test_executable(test_diagnostics_track test_diagnostics_track.cc)
target_link_libraries(test_diagnostics_track synergia_bunch synergia_serialization synergia_foundation
    ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY})
add_test(NAME test_diagnostics_track COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 1 $<TARGET_FILE:test_diagnostics_track>)
add_test(NAME test_diagnostics_track_py COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 1 ${SYNERGIA2_BINARY_DIR}/synergia-local -c "import nose; nose.main()" test_diagnostics_track.py)
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/test_diagnostics_track.py 
    DESTINATION ${CMAKE_CURRENT_BINARY_DIR})

add_test_executable(test_diagnostics_bulk_track test_diagnostics_bulk_track.cc)
target_link_libraries(test_diagnostics_bulk_track synergia_bunch synergia_serialization synergia_foundation
    ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY} ${Boost_SERIALIZATION})
add_test(NAME test_diagnostics_bulk_track COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 1 $<TARGET_FILE:test_diagnostics_bulk_track> synergia_serializatios)

add_test(NAME test_diagnostics_bulk_track_py COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 1 ${SYNERGIA2_BINARY_DIR}/synergia-local -c "import nose; nose.main()" test_diagnostics_bulk_track.py)
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/test_diagnostics_bulk_track.py 
    DESTINATION ${CMAKE_CURRENT_BINARY_DIR})

add_test(NAME test_diagnostics_bulk_track2_mpi1_py COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 1 ${SYNERGIA2_BINARY_DIR}/synergia-local -c "import nose; nose.main()" test_diagnostics_bulk_track2.py)
add_test(NAME test_diagnostics_bulk_track2_mpi2_py COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 2 ${SYNERGIA2_BINARY_DIR}/synergia-local -c "import nose; nose.main()" test_diagnostics_bulk_track2.py)
add_test(NAME test_diagnostics_bulk_track2_mpi3_py COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 3 ${SYNERGIA2_BINARY_DIR}/synergia-local -c "import nose; nose.main()" test_diagnostics_bulk_track2.py)
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/test_diagnostics_bulk_track2.py 
    DESTINATION ${CMAKE_CURRENT_BINARY_DIR})

add_test_executable(test_diagnostics_particles test_diagnostics_particles.cc)
# add_dependencies(test_diagnostics_particles test_diagnostics_particles_get_mean.icc)
target_link_libraries(test_diagnostics_particles synergia_bunch synergia_foundation
    ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY})
add_test(NAME test_diagnostics_particles COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 1 $<TARGET_FILE:test_diagnostics_particles>)
add_test(NAME test_diagnostics_particles_py COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 1 ${SYNERGIA2_BINARY_DIR}/synergia-local -c "import nose; nose.main()" test_diagnostics_particles.py)
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/test_diagnostics_particles.py 
    DESTINATION ${CMAKE_CURRENT_BINARY_DIR})

add_test_executable(test_diagnostics_basic_mpi test_diagnostics_basic_mpi.cc)
target_link_libraries(test_diagnostics_basic_mpi synergia_bunch synergia_foundation synergia_parallel_utils
    ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY})
add_test(NAME test_diagnostics_basic_mpi1 COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 1 $<TARGET_FILE:test_diagnostics_basic_mpi>)
add_test(NAME test_diagnostics_basic_mpi2 COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 2 $<TARGET_FILE:test_diagnostics_basic_mpi>)
add_test(NAME test_diagnostics_basic_mpi4 COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 4 $<TARGET_FILE:test_diagnostics_basic_mpi>)

add_test_executable(test_diagnostics_full2_mpi test_diagnostics_full2_mpi.cc)
target_link_libraries(test_diagnostics_full2_mpi synergia_bunch synergia_foundation synergia_parallel_utils
    ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY})
add_test(NAME test_diagnostics_full2_mpi1 COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 1 $<TARGET_FILE:test_diagnostics_full2_mpi>)
add_test(NAME test_diagnostics_full2_mpi2 COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 2 $<TARGET_FILE:test_diagnostics_full2_mpi>)
add_test(NAME test_diagnostics_full2_mpi4 COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 4 $<TARGET_FILE:test_diagnostics_full2_mpi>)

add_test_executable(test_diagnostics_particles_mpi test_diagnostics_particles_mpi.cc)
target_link_libraries(test_diagnostics_particles_mpi synergia_bunch synergia_foundation
    ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY})
add_test(NAME test_diagnostics_particles_mpi1 COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 1 $<TARGET_FILE:test_diagnostics_particles_mpi>)
add_test(NAME test_diagnostics_particles_mpi2 COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 2 $<TARGET_FILE:test_diagnostics_particles_mpi>)
add_test(NAME test_diagnostics_particles_mpi4 COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 4 $<TARGET_FILE:test_diagnostics_particles_mpi>)

add_test_executable(test_diagnostics_track_mpi test_diagnostics_track_mpi.cc)
target_link_libraries(test_diagnostics_track_mpi synergia_bunch synergia_foundation
    ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY})
add_test(NAME test_diagnostics_track_mpi1 COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 1 $<TARGET_FILE:test_diagnostics_track_mpi>)
add_test(NAME test_diagnostics_track_mpi2 COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 2 $<TARGET_FILE:test_diagnostics_track_mpi>)
add_test(NAME test_diagnostics_track_mpi4 COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 4 $<TARGET_FILE:test_diagnostics_track_mpi>)

#add_test_executable(test_multi_diagnostics_writer test_multi_diagnostics_write_helper.cc)
#target_link_libraries(test_multi_diagnostics_writer synergia_bunch ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY})
#add_test(test_multi_diagnostics_writer test_multi_diagnostics_writer)
#add_test(NAME test_multi_diagnostics_writer_py COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 1 ${SYNERGIA2_BINARY_DIR}/synergia-local -c "import nose; nose.main()" test_multi_diagnostics_writer.py)

add_test_executable(test_populate test_populate.cc)
target_link_libraries(test_populate synergia_bunch synergia_foundation synergia_parallel_utils synergia_hdf5_utils
    ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY} ${HDF5_LIBRARIES})

add_test(NAME test_populate COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 1 $<TARGET_FILE:test_populate>)
add_test(NAME test_populate_py COMMAND ${MPIEXEC_EXECUTABLE} ${MPIEXEC_NUMPROC_FLAG} 1 ${SYNERGIA2_BINARY_DIR}/synergia-local -c "import nose; nose.main()" test_populate.py)
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/test_populate.py 
    DESTINATION ${CMAKE_CURRENT_BINARY_DIR})

set_directory_properties(PROPERTIES ADDITIONAL_MAKE_CLEAN_FILES
    "test_init_writers_full2.h5;test_init_writers.h5;test_init_writers_particles.h5;test_py_construct_full2.h5;test_py_construct.h5;test_py_get_diagnostics.h5;test_py_update_and_write_full2.h5;test_py_update_and_write.h5;test_py_write.h5;test_write_hdf5_full2.h5;test_write_hdf5.h5;test_write_hdf5_no_init.h5;test_write_hdf5_no_init_particles.h5;test_write_hdf5_particles.h5;test_writer_construct_full2.h5;test_writer_construct.h5;test_writer_get_count.h5;test_writer_get_diagnostics_sptr.h5;test_writer_is_dummy_false.h5;test_writer_update_and_write_full2.h5;test_writer_update_and_write.h5;test_writer_update_and_write_particles_0000.h5;test_writer_update_and_write_particles_0001.h5;test_writer_update_and_write_particles_0002.h5;test_writer_write.h5;dummy.h5;dummy1.h5;dummy2.h5")
