name: CI

on:
  push:
    branches: [ devel3 ]
  pull_request:
    branches: [ devel3 ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    container:
      image:  ghcr.io/fnalacceleratormodeling/synergia2-ubuntu-container:main
  
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        submodules: 'true'
    - name: Recursive update submodules
      run: git submodule update --init --recursive

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        . /etc/profile.d/z10_spack_environment.sh 
        . /opt/view/setvars.sh
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DKokkos_ENABLE_OPENMP=on -DBUILD_PYTHON_BINDINGS=off

    - name: Build
      # Build your program with the given configuration
      run: |
        . /etc/profile.d/z10_spack_environment.sh 
        . /opt/view/setvars.sh
        cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run:  |
        . /etc/profile.d/z10_spack_environment.sh 
        . /opt/view/setvars.sh
        ctest -C ${{env.BUILD_TYPE}} --output-on-failure
